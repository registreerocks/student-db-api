openapi: 3.0.0
info:
  description: ''
  version: 1.1.0
  title: Student DB API
tags:
  - name: Student DB API
    description: ''
paths:
  /university/get_all:
    get:
      tags:
        - university
      summary: retrieve all universities
      description: ''
      operationId:  swagger_server.controllers.student_db_API_functions.get_all_universities
      parameters:
        - in: query
          name: meta_flag
          description: True if metadata should be returned
          schema:
            type: boolean
      responses:
        '200':
          description: OK
        '401':
          description: Authentication error

  /university/get_by_id:
    get:
      tags:
        - university
      summary: retrieve a university by its id
      description: ''
      operationId:  swagger_server.controllers.student_db_API_functions.university_get_by_id
      parameters:
        - in: query
          name: id
          description: University id
          schema:
            type: string
        - in: query
          name: meta_flag
          description: True if metadata should be returned
          schema:
            type: boolean
      responses:
        '200':
          description: OK
        '401':
          description: Authentication error

  /university/create:
    post:
      tags:
        - university
      summary: create a new university
      description: ''
      operationId:  swagger_server.controllers.student_db_API_functions.create_university
      responses:
        '200':
          description: OK
        '401':
          description: Authentication error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/University'
        description: University object that needs to be added to the database
        required: true

  /university/get_faculties:
    get:
      tags:
        - university
      summary: returns all faculties of a university
      operationId:  swagger_server.controllers.student_db_API_functions.university_get_faculties
      parameters:
        - in: query
          name: id
          description: Id of the university
          required: true
          schema:
            type: string
        - in: query
          name: meta_flag
          description: True if metadata should be returned
          schema:
            type: boolean
      responses:
        '200':
          description: OK
        '401':
          description: Authentication error
        '409':
          description: Conflict

  /university/get_degrees:
    get:
      tags:
        - university
      summary: returns all degrees of a university
      operationId:  swagger_server.controllers.student_db_API_functions.university_get_degrees
      parameters:
        - in: query
          name: id
          description: Id of the university
          required: true
          schema:
            type: string
        - in: query
          name: meta_flag
          description: True if metadata should be returned
          schema:
            type: boolean
      responses:
        '200':
          description: OK
        '401':
          description: Authentication error
        '409':
          description: Conflict

  /university/get_courses:
    get:
      tags:
        - university
      summary: returns all courses of a university
      operationId:  swagger_server.controllers.student_db_API_functions.university_get_courses
      parameters:
        - in: query
          name: id
          description: Id of the university
          required: true
          schema:
            type: string
        - in: query
          name: meta_flag
          description: True if metadata should be returned
          schema:
            type: boolean
      responses:
        '200':
          description: OK
        '401':
          description: Authentication error
        '409':
          description: Conflict

  /faculty/get_all:
    get:
      tags:
        - faculty
      summary: retrieve all faculties
      description: ''
      operationId:  swagger_server.controllers.student_db_API_functions.get_all_faculties
      parameters:
        - in: query
          name: meta_flag
          description: True if metadata should be returned
          schema:
            type: boolean
      responses:
        '200':
          description: OK
        '401':
          description: Authentication error

  /faculty/get_by_id:
    get:
      tags:
        - faculty
      summary: retrieve a faculty by its id
      description: ''
      operationId:  swagger_server.controllers.student_db_API_functions.faculty_get_by_id
      parameters:
        - in: query
          name: id
          description: Faculty id
          schema:
            type: string
        - in: query
          name: meta_flag
          description: True if metadata should be returned
          schema:
            type: boolean
      responses:
        '200':
          description: OK
        '401':
          description: Authentication error

  /faculty/get_degrees:
    get:
      tags:
        - faculty
      summary: retrieve all degrees and their information belonging to a faculty
      description: ''
      operationId:  swagger_server.controllers.student_db_API_functions.faculty_get_degrees
      parameters:
        - in: query
          name: id
          description: Faculty id
          schema:
            type: string
        - in: query
          name: meta_flag
          description: True if course metadata should be returned
          schema:
            type: boolean
      responses:
        '200':
          description: OK
        '401':
          description: Authentication error

  /faculty/create:
    post:
      tags:
        - faculty
      summary: create a new faculty
      description: ''
      operationId:  swagger_server.controllers.student_db_API_functions.create_faculty
      responses:
        '200':
          description: OK
        '401':
          description: Authentication error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Faculty'
        description: Faculty object that needs to be added to the database
        required: true
        
  # /faculty/append_degrees:
  #   post:
  #     tags:
  #       - faculty
  #     summary: append the list of degrees that belong to a faculty
  #     description: ''
  #     operationId:  swagger_server.controllers.student_db_API_functions.faculty_append_degrees
  #     responses:
  #       '200':
  #         description: OK
  #       '401':
  #         description: Authentication error
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/FacultyAppendDegree'
  #       description: List of degrees
  #       required: true

  # /faculty/delete_degree:
  #   post:
  #     tags:
  #       - faculty
  #     summary: delete one degree from the faculty by degree_id
  #     description: ''
  #     operationId:  swagger_server.controllers.student_db_API_functions.faculty_delete_degree
  #     responses:
  #       '200':
  #         description: OK
  #       '401':
  #         description: Authentication error
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/FacultyDeleteDegree'
  #       description: Faculty and degree id to delete degree from faculty 
  #       required: true

  /degree/get_all:
    get:
      tags:
        - degree
      summary: retrieve all degrees
      description: ''
      operationId:  swagger_server.controllers.student_db_API_functions.get_all_degrees
      parameters:
        - in: query
          name: meta_flag
          description: True if metadata should be returned
          schema:
            type: boolean
      responses:
        '200':
          description: OK
        '401':
          description: Authentication error

  /degree/get_by_id:
    get:
      tags:
        - degree
      summary: retrieve a degree by its id
      description: ''
      operationId:  swagger_server.controllers.student_db_API_functions.degree_get_by_id
      parameters:
        - in: query
          name: id
          description: Degree id
          schema:
            type: string
        - in: query
          name: meta_flag
          description: True if metadata should be returned
          schema:
            type: boolean
      responses:
        '200':
          description: OK
        '401':
          description: Authentication error

  /degree/get_courses:
    get:
      tags:
        - degree
      summary: retrieve all courses and their information belonging to a degree
      description: ''
      operationId:  swagger_server.controllers.student_db_API_functions.degree_get_courses
      parameters:
        - in: query
          name: id
          description: Degree id
          schema:
            type: string
        - in: query
          name: meta_flag
          description: True if course metadata should be returned
          schema:
            type: boolean
      responses:
        '200':
          description: OK
        '401':
          description: Authentication error

  /degree/create:
    post:
      tags:
        - degree
      summary: create a new degree
      description: ''
      operationId:  swagger_server.controllers.student_db_API_functions.create_degree
      responses:
        '200':
          description: OK
        '401':
          description: Authentication error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Degree'
        description: Degree object that needs to be added to the database
        required: true

  # /degree/append_courses:
  #   post:
  #     tags:
  #       - degree
  #     summary: append the list of courses that belong to a degree
  #     description: ''
  #     operationId:  swagger_server.controllers.student_db_API_functions.degree_append_courses
  #     responses:
  #       '200':
  #         description: OK
  #       '401':
  #         description: Authentication error
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/DegreeAppendCourses'
  #       description: List of courses and their weightings
  #       required: true

  # /degree/delete_course:
  #   post:
  #     tags:
  #       - degree
  #     summary: delete one course from the degree by course_id
  #     description: ''
  #     operationId:  swagger_server.controllers.student_db_API_functions.degree_delete_course
  #     responses:
  #       '200':
  #         description: OK
  #       '401':
  #         description: Authentication error
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/DegreeDeleteCourse'
  #       description: Degree and course id to delete course from degree 
  #       required: true

  /degree/verify:
    get:
      tags:
        - degree
      summary: verify degree completion
      description: ''
      operationId:  swagger_server.controllers.student_db_API_functions.verify_degree
      parameters:
        - in: query
          name: student
          description: ID number of student
          schema:
            type: string
        - in: query
          name: degree
          description: degree code
          schema:
            type: string
        - in: query
          name: session
          description: session ID
          schema:
            type: string
      responses:
        '200':
          description: OK
        '401':
          description: Authentication error

  /course/get_all:
    get:
      tags:
        - course
      summary: retrieve all courses
      description: ''
      operationId:  swagger_server.controllers.student_db_API_functions.get_all_courses
      parameters:
        - in: query
          name: meta_flag
          description: True if metadata should be returned
          schema:
            type: boolean
      responses:
        '200':
          description: OK
        '401':
          description: Authentication error

  /course/get_by_id:
    get:
      tags:
        - course
      summary: retrieve a course by its id
      description: ''
      operationId:  swagger_server.controllers.student_db_API_functions.course_get_by_id
      parameters:
        - in: query
          name: id
          description: Course id
          schema:
            type: string
        - in: query
          name: meta_flag
          description: True if metadata should be returned
          schema:
            type: boolean
      responses:
        '200':
          description: OK
        '401':
          description: Authentication error

  # /course/get_by_lecturer:
  #   get:
  #     tags:
  #       - course
  #     summary: retrieve all courses taught by one particular lecturer
  #     description: ''
  #     operationId:  swagger_server.controllers.student_db_API_functions.course_get_by_lecturer
  #     parameters:
  #       - in: query
  #         name: lecturer
  #         description: Lecturer's name
  #         schema:
  #           type: string
  #       - in: query
  #         name: meta_flag
  #         description: True if metadata should be returned
  #         schema:
  #           type: boolean
  #     responses:
  #       '200':
  #         description: OK
  #       '401':
  #         description: Authentication error

  /course/create:
    post:
      tags:
        - course
      summary: create a new course
      description: ''
      operationId:  swagger_server.controllers.student_db_API_functions.create_course
      responses:
        '200':
          description: OK
        '401':
          description: Authentication error
        '409':
          description: Conflict
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
        description: Course object that needs to be added to the database
        required: true

  # /course/update_passing:
  #   post:
  #     tags:
  #       - course
  #     summary: update the passing threshold of a course
  #     description: ''
  #     operationId:  swagger_server.controllers.student_db_API_functions.course_update_passing
  #     responses:
  #       '200':
  #         description: OK
  #       '401':
  #         description: Authentication error
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/CourseUpdatePassing'
  #       description: course id and new passing threshold
  #       required: true

  # /course/update_distinction:
  #   post:
  #     tags:
  #       - course
  #     summary: update the distinction threshold of a course
  #     description: ''
  #     operationId:  swagger_server.controllers.student_db_API_functions.course_update_distinction
  #     responses:
  #       '200':
  #         description: OK
  #       '401':
  #         description: Authentication error
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/CourseUpdateDistinction'
  #       description: course id and new distinction threshold
  #       required: true

  # /course/update_components:
  #   post:
  #     tags:
  #       - course
  #     summary: update the components of a course
  #     description: ''
  #     operationId:  swagger_server.controllers.student_db_API_functions.course_update_components
  #     responses:
  #       '200':
  #         description: OK
  #       '401':
  #         description: Authentication error
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/CourseUpdateComponents'
  #       description: resubmit the whole component structure
  #       required: true

  # /course/add_prerequisite:
  #   post:
  #     tags:
  #       - course
  #     summary: add a prerequisite to a course
  #     description: ''
  #     operationId:  swagger_server.controllers.student_db_API_functions.course_add_prerequisite
  #     responses:
  #       '200':
  #         description: OK
  #       '401':
  #         description: Authentication error
  #     requestBody:
  #       $ref: '#/components/requestBodies/CoursePrerequisite'

  # /course/delete_prerequisite:
  #   post:
  #     tags:
  #       - course
  #     summary: delete a prerequisite from a course
  #     description: ''
  #     operationId:  swagger_server.controllers.student_db_API_functions.course_delete_prerequisite
  #     responses:
  #       '200':
  #         description: OK
  #       '401':
  #         description: Authentication error
  #     requestBody:
  #       $ref: '#/components/requestBodies/CoursePrerequisite'

  # /course/add_corequisite:
  #   post:
  #     tags:
  #       - course
  #     summary: add a corequisite to a course
  #     description: ''
  #     operationId:  swagger_server.controllers.student_db_API_functions.course_add_corequisite
  #     responses:
  #       '200':
  #         description: OK
  #       '401':
  #         description: Authentication error
  #     requestBody:
  #       $ref: '#/components/requestBodies/CourseCorequisite'

  # /course/delete_corequisite:
  #   post:
  #     tags:
  #       - course
  #     summary: delete a corequisite from a course
  #     description: ''
  #     operationId:  swagger_server.controllers.student_db_API_functions.course_delete_corequisite
  #     responses:
  #       '200':
  #         description: OK
  #       '401':
  #         description: Authentication error
  #     requestBody:
  #       $ref: '#/components/requestBodies/CourseCorequisite'

  /mark/create:
    post:
      tags:
        - mark
      summary: create a new mark
      description: ''
      operationId:  swagger_server.controllers.student_db_API_functions.create_mark
      responses:
        '200':
          description: OK
        '401':
          description: Authentication error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mark'
        description: Mark object that needs to be added to the database
        required: true

  /mark/get_by_student:
    get:
      tags:
        - mark
      summary: returns all marks for a particular student
      operationId:  swagger_server.controllers.student_db_API_functions.get_marks_by_student
      parameters:
        - in: query
          name: student_address
          description: Smart contract address of student to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '401':
          description: Authentication error

  /mark/get_by_course:
    get:
      tags:
        - mark
      summary: returns all marks for a particular course
      operationId:  swagger_server.controllers.student_db_API_functions.get_marks_by_course_id
      parameters:
        - in: query
          name: id
          description: ID of the course entry
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '401':
          description: Authentication error

  # /mark/get_by_lecturer:
  #   get:
  #     tags:
  #       - mark
  #     summary: 'returns all marks for a lecturer, grouped by courses and students'
  #     operationId:  swagger_server.controllers.student_db_API_functions.get_course_marks_by_lecturer
  #     parameters:
  #       - in: query
  #         name: lecturer
  #         description: name of the lecturer
  #         required: true
  #         schema:
  #           type: string
  #     responses:
  #       '200':
  #         description: OK
  #       '401':
  #         description: Authentication error

  # /mark/update:
  #   post:
  #     tags:
  #       - mark
  #     summary: update a student's mark
  #     description: ''
  #     operationId:  swagger_server.controllers.student_db_API_functions.mark_update
  #     responses:
  #       '200':
  #         description: OK
  #       '401':
  #         description: Authentication error
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/MarkUpdate'
  #       description: mark id and new mark
  #       required: true

  /average/course/create:
    post:
      tags:
        - average
      summary: create a course average
      description: ''
      operationId:  swagger_server.controllers.student_db_API_functions.create_course_average
      responses:
        '200':
          description: OK
        '401':
          description: Authentication error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseAverage'
        description: Course average object that needs to be added to the database
        required: true

  /average/degree/create:
    post:
      tags:
        - average
      summary: create a degree average
      description: ''
      operationId:  swagger_server.controllers.student_db_API_functions.create_degree_average
      responses:
        '200':
          description: OK
        '401':
          description: Authentication error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DegreeAverage'
        description: Degree average object that needs to be added to the database
        required: true

  # /average/course/update_one:
  #   post:
  #     tags:
  #       - average
  #     summary: update average for one student and one course
  #     description: ''
  #     operationId:  swagger_server.controllers.student_db_API_functions.course_average_update_one
  #     responses:
  #       '200':
  #         description: OK
  #       '401':
  #         description: Authentication error
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/CourseAverageUpdateOne'
  #       description: student address and course_id
  #       required: true

  # /average/course/update:
  #   post:
  #     tags:
  #       - average
  #     summary: update averages for all students of one course
  #     description: ''
  #     operationId:  swagger_server.controllers.student_db_API_functions.course_average_update_course
  #     responses:
  #       '200':
  #         description: OK
  #       '401':
  #         description: Authentication error
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/CourseAverageUpdate'
  #       description: course_id
  #       required: true

  # /average/course/update_all:
  #   post:
  #     tags:
  #       - average
  #     summary: update averages for courses
  #     description: ''
  #     operationId:  swagger_server.controllers.student_db_API_functions.course_average_update_all
  #     responses:
  #       '200':
  #         description: OK
  #       '401':
  #         description: Authentication error

  # /average/degree/update_one:
  #   post:
  #     tags:
  #       - average
  #     summary: update average for one student and one degree
  #     description: ''
  #     operationId:  swagger_server.controllers.student_db_API_functions.degree_average_update_one
  #     responses:
  #       '200':
  #         description: OK
  #       '401':
  #         description: Authentication error
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/DegreeAverageUpdateOne'
  #       description: student address and degree_id
  #       required: true

  # /average/degree/update:
  #   post:
  #     tags:
  #       - average
  #     summary: update averages for all students of one degree
  #     description: ''
  #     operationId:  swagger_server.controllers.student_db_API_functions.degree_average_update_degree
  #     responses:
  #       '200':
  #         description: OK
  #       '401':
  #         description: Authentication error
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/DegreeAverageUpdate'
  #       description: degree_id
  #       required: true

  # /average/degree/update_all:
  #   post:
  #     tags:
  #       - average
  #     summary: update averages for degrees
  #     description: ''
  #     operationId:  swagger_server.controllers.student_db_API_functions.degree_average_update_all
  #     responses:
  #       '200':
  #         description: OK
  #       '401':
  #         description: Authentication error

  /query/bulk:
    post:
      tags:
        - query
      summary: 'returns query results for a list of query details'
      operationId:  swagger_server.controllers.student_db_API_functions.query_bulk
      responses:
        '200':
          description: OK
        '401':
          description: Authentication error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryBulk'
        description: list of query details
        required: true

  /query/course/top_x:
    get:
      tags:
        - query
      summary: 'returns top x course averages'
      operationId:  swagger_server.controllers.student_db_API_functions.query_course_top_x
      parameters:
        - in: query
          name: x
          description: number of results to return
          required: true
          schema:
            type: integer
            minimum: 1
        - in: query
          name: course_id
          description: course id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '401':
          description: Authentication error

  /query/course/top_x_percent:
    get:
      tags:
        - query
      summary: 'returns top x percent of course averages'
      operationId:  swagger_server.controllers.student_db_API_functions.query_course_top_x_percent
      parameters:
        - in: query
          name: x
          description: percentage number of results to return
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - in: query
          name: course_id
          description: course id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '401':
          description: Authentication error

  /query/degree/top_x:
    get:
      tags:
        - query
      summary: 'returns top x degree averages'
      operationId:  swagger_server.controllers.student_db_API_functions.query_degree_top_x
      parameters:
        - in: query
          name: x
          description: number of results to return
          required: true
          schema:
            type: integer
            minimum: 1
        - in: query
          name: degree_id
          description: degree id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '401':
          description: Authentication error

  /query/degree/top_x_percent:
    get:
      tags:
        - query
      summary: 'returns top x percent of degree averages'
      operationId:  swagger_server.controllers.student_db_API_functions.query_degree_top_x_percent
      parameters:
        - in: query
          name: x
          description: percentage number of results to return
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - in: query
          name: degree_id
          description: degree id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '401':
          description: Authentication error

servers:
  - url: 'http://0.0.0.0:8000/v0.1'
components:
  requestBodies:
    CoursePrerequisite:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CoursePrerequisite'
      description: course id and prerequisite id
      required: true
    CourseCorequisite:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CourseCorequisite'
      description: course id and corequisite id
      required: true
  schemas:
    University:
      type: object
      properties:
        asset:
          type: object
          properties:
            data:
              type: object
              properties:
                asset_type:
                  type: string
                  default: university
                name:
                  type: string
                short:
                  type: string
                physical_address:
                  type: string
                country:
                  type: string
        metadata:
          type: object
          properties:
            timestamp:
              type: string
              format: date
            website:
              type: string
            logo:
              type: string
            description:
              type: string
      xml:
        name: University
    Faculty:
      type: object
      properties:
        asset:
          type: object
          properties:
            data:
              type: object
              properties:
                asset_type:
                  type: string
                  default: faculty
                name:
                  type: string
                description:
                  type: string
                id:
                  type: string
                university_id:
                  type: string
        metadata:
          type: object
          properties:
            degrees:
              type: array
              items:
                type: object
                properties:
                  degree_id:
                    type: string
            timestamp:
              type: string
              format: date
      xml:
        name: Faculty
    Degree:
      type: object
      properties:
        asset:
          type: object
          properties:
            data:
              type: object
              properties:
                asset_type:
                  type: string
                  default: degree
                name:
                  type: string
                level:
                  type: string
                description:
                  type: string
                id:
                  type: string
                university_id:
                  type: string
                faculty_id:
                  type: string
                total_credits:
                  type: integer
                  minimum: 0
        metadata:
          type: object
          properties:
            courses:
              type: array
              items:
                type: object
                properties:
                  course_id:
                    type: string
                  credits:
                    type: integer
                    minimum: 0
                  semester:
                    type: array
                    items:
                      type: integer
            timestamp:
              type: string
              format: date
      xml:
        name: Degree
    Course:
      type: object
      properties:
        asset:
          type: object
          properties:
            data:
              type: object
              properties:
                asset_type:
                  type: string
                  default: course
                name:
                  type: string
                description:
                  type: string
                id:
                  type: string
                lecturer:
                  type: string
                university_id:
                  type: string
                faculty_id:
                  type: string
        metadata:
          type: object
          properties:
            passing:
              type: integer
            distinction:
              type: integer
            components:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                  weighting:
                    type: number
                    format: float
                    minimum: 0
                    maximum: 100
                  required:
                    type: boolean
            prerequisite:
              type: array
              items:
                type: string
            corequisite:
              type: array
              items:
                type: string
            timestamp:
              type: string
              format: date
      xml:
        name: Course
    Mark:
      type: object
      properties:
        asset:
          type: object
          properties:
            data:
              type: object
              properties:
                asset_type:
                  type: string
                  default: mark
                student_address:
                  type: string
                university_id:
                  type: string
                faculty_id:
                  type: string
                degree_id:
                  type: string
                course_id:
                  type: string
                type:
                  type: string
                term:
                  type: integer
                semester:
                  type: array
                  items: 
                    type: integer
        metadata:
          type: object
          properties:
            mark:
              type: string
            timestamp:
              type: string
              format: date
      xml:
        name: Mark
    FacultyAppendDegree:
      type: object
      properties:
        faculty_id:
          type: string
        degrees:
          type: array
          items:
            type: object
            properties:
              degree_id:
                type: string
      xml:
        name: FacultyAppendDegree
    FacultyDeleteDegree:
      type: object
      properties:
        faculty_id:
          type: string
        degree_id:
          type: string
      xml:
        name: FacultyDeleteDegree
    DegreeAppendCourses:
      type: object
      properties:
        degree_id:
          type: string
        courses:
          type: array
          items:
            type: object
            properties:
              course_id:
                type: string
              credits:
                type: integer
                minimum: 0
              semester:
                type: array
                items:
                  type: integer
      xml:
        name: DegreeAppendCourses
    DegreeDeleteCourse:
      type: object
      properties:
        degree_id:
          type: string
        course_id:
          type: string
      xml:
        name: DegreeDeleteCourse
    CourseUpdatePassing:
      type: object
      properties:
        course_id:
          type: string
        passing:
          type: integer
          minimum: 0
          maximum: 100
      xml:
        name: CourseUpdatePassing
    CourseUpdateDistinction:
      type: object
      properties:
        course_id:
          type: string
        distinction:
          type: integer
          minimum: 0
          maximum: 100
      xml:
        name: CourseUpdateDistinction
    CourseUpdateComponents:
      type: object
      properties:
        course_id:
          type: string
        components:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              weighting:
                type: number
                format: float
                minimum: 0
                maximum: 100
              required:
                type: boolean
      xml:
        name: CourseUpdateComponents
    CoursePrerequisite:
      type: object
      properties:
        course_id:
          type: string
        prerequisite_id:
          type: string
      xml:
        name: CoursePrerequisite
    CourseCorequisite:
      type: object
      properties:
        course_id:
          type: string
        corequisite_id:
          type: string
      xml:
        name: CourseCorequisite
    MarkUpdate:
      type: object
      properties:
        mark_id:
          type: string
        mark:
          type: string
      xml:
        name: MarkUpdate
    # CourseAverageUpdateOne:
    #   type: object
    #   properties:
    #     student_address:
    #       type: string
    #     course_id:
    #       type: string
    #   xml:
    #     name: CourseAverageUpdateOne
    # CourseAverageUpdate:
    #   type: object
    #   properties:
    #     course_id:
    #       type: string
    #   xml:
    #     name: CourseAverageUpdate
    # DegreeAverageUpdateOne:
    #   type: object
    #   properties:
    #     student_address:
    #       type: string
    #     degree_id:
    #       type: string
    #   xml:
    #     name: DegreeAverageUpdateOne
    # DegreeAverageUpdate:
    #   type: object
    #   properties:
    #     degree_id:
    #       type: string
    #   xml:
    #     name: DegreeAverageUpdate
    CourseAverage:
      type: object
      properties:
        asset:
          type: object
          properties:
            data:
              type: object
              properties:
                asset_type:
                  type: string
                  default: course_average
                student_address:
                  type: string
                university_id:
                  type: string
                faculty_id:
                  type: string
                degree_id:
                  type: string
                course_id:
                  type: string
                term:
                  type: integer
                semester:
                  type: array
                  items: 
                    type: integer
        metadata:
          type: object
          properties:
            avg:
              type: string
            complete:
              type: boolean
              default: True
            timestamp:
              type: string
              format: date
      xml:
        name: CourseAverage
    DegreeAverage:
      type: object
      properties:
        asset:
          type: object
          properties:
            data:
              type: object
              properties:
                asset_type:
                  type: string
                  default: course_average
                student_address:
                  type: string
                university_id:
                  type: string
                faculty_id:
                  type: string
                degree_id:
                  type: string
                term:
                  type: integer
        metadata:
          type: object
          properties:
            avg:
              type: string
            complete:
              type: boolean
            timestamp:
              type: string
              format: date
      xml:
        name: DegreeAverage
    QueryBulk:
      type: object
      properties:
        query_list:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              type_id:
                type: string
              x:
                type: integer
              absolute:
                type: boolean
      xml:
        name: QueryBulk